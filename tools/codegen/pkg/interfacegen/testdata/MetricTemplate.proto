syntax = "proto3";

package istio.mixer.adapter.metric;

import "mixer/v1/config/descriptor/value_type.proto";
import "tools/codegen/pkg/template_extension/TemplateExtensions.proto";

option (istio.mixer.v1.config.template.template_variety) = TEMPLATE_VARIETY_REPORT;
option (istio.mixer.v1.config.template.template_name) = "Metric";

message Type {
    istio.mixer.v1.config.descriptor.ValueType value = 2;
    map<string, istio.mixer.v1.config.descriptor.ValueType> dimensions = 3;

    string description = 4;
    Kind kind = 5;
    BucketsDefinition buckets = 6;
}

message Constructor {
    istio.mixer.v1.config.template.Expr value = 2;
    map<string, istio.mixer.v1.config.template.Expr> dimensions = 3;

    // message inside the Constructor
    OtherMessage om = 4;

    // message from other file inside a constructor
    istio.mixer.v1.config.descriptor.ValueType vt = 5;
}

enum Kind {
    METRIC_KIND_UNSPECIFIED = 0;
    GAUGE = 1;
    COUNTER = 2;
    DISTRIBUTION = 3;
}

message LinearBuckets {
    int32 num_finite_buckets = 1;
    double width = 2;
    double offset = 3;
}

message ExponentialBuckets {
    int32 num_finite_buckets = 1;
    double growth_factor = 2;
    double scale = 3;
}

message ExplicitBuckets {
    repeated double bounds = 1;
}

message BucketsDefinition {
    oneof definition {
        LinearBuckets linear_buckets = 1;
        ExponentialBuckets exponential_buckets = 2;
        ExplicitBuckets explicit_buckets = 3;
    }
}

message OtherMessage {
    int64 t = 1;
}
