package template

// InterfaceTemplate defines the template used to generate the adapter
// interfaces for Mixer for a given aspect.
var InterfaceTemplate = `// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED.

package {{.GoPackageName}}

import (
"istio.io/mixer/pkg/adapter/config"
)

const TemplateName = "{{.PackageName}}.{{.Name}}"

type Instance struct {
  Name string
  {{range .InstanceStruct.Fields}}
  {{.Name}} {{.Type.Name}}
  {{end}}
}

type {{.Name}}ProcessorBuilder interface {
	config.HandlerBuilder
	Configure{{.Name}}(map[string]*Type) error
}

type {{.Name}}Processor interface {
  config.Handler
  {{if eq .VarietyName "TEMPLATE_VARIETY_CHECK" -}}
    Check{{.Name}}(instance *Instance) (bool, config.CacheabilityInfo, error)
  {{else -}}
    Report{{.Name}}(instances []*Instance) error
  {{end}}
}
`
