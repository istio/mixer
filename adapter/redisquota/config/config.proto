// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package adapter.redisquota.config;

import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";

option go_package = "config";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;
option (gogoproto.gostring_all) = false;

message Params {
    // Minimum number of seconds that deduplication is possible for a given operation.
    google.protobuf.Duration min_deduplication_duration = 1 [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];

    // Redis network address
    string redis_server_url = 2;

    // Network for communicating with redis, i.e., "tcp"
    string socket_type = 3;

    // Maximum number of idle connections to redis
    int64 connection_pool_size = 4;

    // Algorithm for rate-limiting: either fixed-window or rolling-window.
    // The fixed-window approach can allow 2x peak specified rate, whereas the rolling-window doesn't.
    // The rolling-window algorithm's additional precision comes at the cost of increased redis resource usage.
    string rate_limit_algorithm = 5;
}
