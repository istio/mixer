// Code generated by protoc-gen-go.
// source: mixer/pkg/templates/sample/report/ReportTesterTemplate.gen.proto
// DO NOT EDIT!

/*
Package istio_mixer_adapter_sample_report is a generated protocol buffer package.

It is generated from these files:
	mixer/pkg/templates/sample/report/ReportTesterTemplate.gen.proto
	mixer/pkg/templates/sample/report/ReportTesterTemplate.proto

It has these top-level messages:
	Type
	ConstructorParam
	Template
*/
package istio_mixer_adapter_sample_report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import istio_mixer_v1_config_descriptor "istio.io/api/mixer/v1/config/descriptor"
import _ "istio.io/mixer/pkg/templates/mixer"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type struct {
	Value      istio_mixer_v1_config_descriptor.ValueType            `protobuf:"varint,2,opt,name=value,enum=istio.mixer.v1.config.descriptor.ValueType" json:"value,omitempty"`
	Dimensions map[string]istio_mixer_v1_config_descriptor.ValueType `protobuf:"bytes,3,rep,name=dimensions" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=istio.mixer.v1.config.descriptor.ValueType"`
}

func (m *Type) Reset()                    { *m = Type{} }
func (m *Type) String() string            { return proto.CompactTextString(m) }
func (*Type) ProtoMessage()               {}
func (*Type) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Type) GetValue() istio_mixer_v1_config_descriptor.ValueType {
	if m != nil {
		return m.Value
	}
	return istio_mixer_v1_config_descriptor.VALUE_TYPE_UNSPECIFIED
}

func (m *Type) GetDimensions() map[string]istio_mixer_v1_config_descriptor.ValueType {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

type ConstructorParam struct {
	Value      string            `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Dimensions map[string]string `protobuf:"bytes,3,rep,name=dimensions" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ConstructorParam) Reset()                    { *m = ConstructorParam{} }
func (m *ConstructorParam) String() string            { return proto.CompactTextString(m) }
func (*ConstructorParam) ProtoMessage()               {}
func (*ConstructorParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConstructorParam) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ConstructorParam) GetDimensions() map[string]string {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func init() {
	proto.RegisterType((*Type)(nil), "istio.mixer.adapter.sample.report.Type")
	proto.RegisterType((*ConstructorParam)(nil), "istio.mixer.adapter.sample.report.ConstructorParam")
}

func init() {
	proto.RegisterFile("mixer/pkg/templates/sample/report/ReportTesterTemplate.gen.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0x4f, 0x4b, 0x72, 0x41,
	0x18, 0xc5, 0x99, 0xeb, 0xfb, 0x0a, 0x8e, 0xf4, 0x87, 0xbb, 0x12, 0x57, 0xe6, 0x4a, 0x10, 0x9e,
	0x41, 0x5b, 0x14, 0xae, 0x22, 0x73, 0xd5, 0x26, 0x4a, 0x6a, 0x57, 0x4c, 0xfa, 0x24, 0x83, 0xde,
	0x3b, 0xc3, 0xcc, 0xa3, 0x78, 0xbf, 0x42, 0x5b, 0x3f, 0x47, 0x5f, 0xa6, 0xbe, 0x82, 0xfb, 0xb6,
	0x2d, 0xc3, 0x19, 0x2b, 0x33, 0xc1, 0xa0, 0xd5, 0xc0, 0xc3, 0x39, 0xbf, 0x73, 0x0e, 0xc3, 0x4f,
	0x12, 0x35, 0x45, 0x2b, 0xcc, 0x70, 0x20, 0x08, 0x13, 0x33, 0x92, 0x84, 0x4e, 0x38, 0x99, 0x98,
	0x11, 0x0a, 0x8b, 0x46, 0x5b, 0x12, 0x97, 0xfe, 0xe9, 0xa2, 0x23, 0xb4, 0xdd, 0xa5, 0x06, 0x06,
	0x98, 0x82, 0xb1, 0x9a, 0x74, 0x7c, 0xa0, 0x1c, 0x29, 0x0d, 0x9e, 0x03, 0xb2, 0x2f, 0x0d, 0xa1,
	0x85, 0x40, 0x80, 0x40, 0x28, 0xd7, 0x43, 0xc8, 0xa4, 0x21, 0x7a, 0x3a, 0x7d, 0x50, 0x03, 0xd1,
	0x47, 0xd7, 0xb3, 0xca, 0x90, 0xb6, 0x62, 0x22, 0x47, 0x63, 0xbc, 0xa3, 0xcc, 0x60, 0xe0, 0x95,
	0x9b, 0x9b, 0x1a, 0x85, 0xdb, 0x47, 0x7a, 0x67, 0x4a, 0x98, 0x3a, 0xa5, 0x53, 0x17, 0x3c, 0xd5,
	0x57, 0xc6, 0xff, 0x75, 0x33, 0x83, 0x71, 0x8b, 0xff, 0xf7, 0xc0, 0x52, 0x54, 0x61, 0xb5, 0xdd,
	0x66, 0x1d, 0x56, 0xcb, 0x4d, 0x1a, 0x10, 0xf2, 0xe1, 0x2b, 0x1f, 0xae, 0x17, 0x72, 0xef, 0x3d,
	0xe7, 0xbc, 0xaf, 0x92, 0x25, 0xb8, 0x94, 0xab, 0xe4, 0x6a, 0xc5, 0xe6, 0x11, 0x6c, 0x5d, 0x07,
	0x0b, 0x33, 0x9c, 0x7d, 0x3a, 0x3b, 0x29, 0xd9, 0xac, 0x7c, 0xcb, 0xf7, 0xd6, 0x4e, 0x71, 0x91,
	0xe7, 0x86, 0x98, 0x95, 0x58, 0x85, 0xd5, 0x0a, 0x7f, 0x29, 0xda, 0x8a, 0x8e, 0x59, 0xf5, 0x89,
	0xf1, 0xfd, 0xb6, 0x4e, 0x1d, 0xd9, 0x71, 0x8f, 0xb4, 0xbd, 0x90, 0x56, 0x26, 0xf1, 0xce, 0x2a,
	0xb4, 0x10, 0xdf, 0x6c, 0x18, 0xd4, 0xfe, 0xc5, 0xa0, 0x75, 0xee, 0x8f, 0x71, 0x8d, 0x2d, 0xe3,
	0xbe, 0xf7, 0x58, 0xf4, 0x3d, 0x8d, 0xdf, 0x9e, 0xe7, 0xb3, 0x88, 0x3d, 0xbe, 0xcc, 0x67, 0x51,
	0xfe, 0xca, 0xc7, 0xdd, 0xe7, 0xfd, 0xe7, 0x1d, 0xbe, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x4f,
	0xcb, 0x3a, 0x84, 0x02, 0x00, 0x00,
}
