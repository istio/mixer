// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.aspect.config;

import "gogoproto/gogo.proto";

option go_package="config";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;
option (gogoproto.gostring_all) = false;

//
// Example usage:
//     kind: access-logs
//     params:
//       logName: "access_log"
//       log:
//         logFormat: COMMON
//         templateExpressions:
//            originIp: origin.ip
//            source_user: origin.user
//            timestamp: request.time
//            method: request.method | ""
//            url: request.path
//            protocol: request.scheme
//            responseCode: response.code
//            responseSize: response.size
//         labels:
//            originIp: origin.ip
//            source_user: origin.user
//            timestamp: request.time
//            method: request.method | ""
//            url: request.path
//            protocol: request.scheme
//            responseCode: response.code
//            responseSize: response.size
message AccessLogsParams {
    // Identifies a collection of related log entries.
    string log_name = 1;

    // Describes how attributes must be evaluated to produce values for a log message.
    message AccessLog {
        // Only used if log_format is CUSTOM. Links this AccessLog to a LogEntryDescriptor
        // that describes the log's template.
        string descriptor_name = 2;

        // Map of template variable name to expression for the descriptor's log_template. At
        // run time each expression will be evaluated, and together they will provide values
        // for the log's template string. Labels and template expressions do not mix: if the
        // result of some expression is needed for both constructing the payload and for
        // dimensioning the log entry, it must be included both in these expressions and in
        // the `labels` expressions.
        map<string, string> template_expressions = 3;

        // Map of LogEntryDescriptor label name to attribute expression. At run time each
        // expression will be evaluated to determine the value that will be used to fill
        // in the log template. The result of evaluating the expression must match the
        // ValueType of the label in the LogEntryDescriptor.
        map<string, string> labels = 4;
    }
    // The log that will be constructed and handed to the aspect at runtime.
    AccessLog log = 2 [(gogoproto.nullable) = false];
}
