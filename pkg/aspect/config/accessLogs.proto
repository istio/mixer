// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.aspect.config;

option go_package="config";

// Configures an individual access-logs aspect.
//
// Example usage:
// kind: access-logs
// params:
//    log_name: "logs/access_log"
//    attributes: "source.ip","host.URL","
//    log_format: "COMMON"
message AccessLogsParams {
    // Provides a way to identify a collection of related log entries.
    // Default value: "access_log"
    string log_name = 1;

    // A list of names of attributes that will be used to generate
    // access log entries.
    repeated string attributes = 2;

    // AccessLogFormat specifies the format to use for generating textual log
    // entries for the accessLogger aspect of mixer.
    //
    // Default value: COMMON.
    enum AccessLogFormat {

        // Refers to the [Common Log Format](https://en.wikipedia.org/wiki/Common_Log_Format).
        // It is used to generate entries like:
        // `127.0.0.1 user-identifier frank [10/Oct/2000:13:55:36 -0700] "GET /apache_pb.gif HTTP/1.0" 200 2326`
        COMMON = 0;

        // Refers to the Apache [Combined Log Format](https://httpd.apache.org/docs/1.3/logs.html#combined).
        // It is used to generate entries like:
        // `127.0.0.1 user-identifier frank [10/Oct/2000:13:55:36 -0700] "GET /apache_pb.gif HTTP/1.0" 200 2326 "http://www.example.com/start.html" "Mozilla/4.08 [en] (Win98; I ;Nav)"`
        COMBINED = 1;

        // Used to enable operator-specified formats. This format should be used
        // in tandem with `custom_log_template` to provide an alternate format
        // for access log entries.
        CUSTOM = 99;
    }

    AccessLogFormat log_format = 3;

    // This template will be applied to the map of attributes names to values
    // generated by the mixer from the specified set of attributes
    // to create a textual access log entry.
    //
    // The template MUST be specified in a format compatible with:
    // https://golang.org/pkg/text/template/.
    //
    // Mixer will use the "missingkey=default" behavior for template execution.
    // The default behavior:
    //    If the key is not found, do nothing and continue execution.
    //    If printed, the result of the index operation is the string "<no value>".
    string custom_log_template = 4;
}
