// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.aspect.config;

option go_package="config";

// Configures an individual application-logs aspect.
message ApplicationLogsParams {
    // Identifies a collection of related log entries.
    string log_name = 1;

    message ApplicationLog {
        // Must match the name of some LogEntryDescriptor.
        string descriptor_name = 1;

        // The expression to evaluate to determine this log's severity at runtime.
        string severity = 2;

        // The expression to evaluate to determine this log's timestamp.
        string timestamp = 3;

        // The golang time layout format string used to print the timestamp
        string time_format = 4;

        // Map of template variable name to expression for the descriptor's log_template. At
        // run time each expression will be evaluated, and together they will provide values
        // for the log's template string. Labels and template expressions do not mix: if the
        // result of some expression is needed for both constructing the payload and for
        // dimensioning the log entry, it must be included both in these expressions and in
        // the `labels` expressions.
        map<string, string> template_expressions = 5;

        // Map of LogEntryDescriptor label name to attribute expression. At run time each
        // expression will be evaluated to determine the value that will be used to fill
        // in the log template. The result of evaluating the expression must match the
        // ValueType of the label in the LogEntryDescriptor.
        map<string, string> labels = 6;
    }
    repeated ApplicationLog logs = 2;
}
